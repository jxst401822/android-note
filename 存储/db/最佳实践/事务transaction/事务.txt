默认下，一个statement在执行时，会自动添加一个事务
事务的执行 是比较耗时的
	如：sqlite虽然1秒可以插入50000条数据，但是1s内只能支持 十几次 事务

两种事务模式：
. SQLiteSession#TRANSACTION_MODE_IMMEDIATE
	SQLiteSession访问数据库时，申请RESERVED锁：
		参见：锁.txt
	并发性：当一个SQLiteSession（对应一个线程）在 写 数据库时，允许其他SQLiteSession 读 数据库
. SQLiteSession#TRANSACTION_MODE_EXCLUSIVE
	SQLiteSession访问数据库时，申请EXCLUSIVE锁：
	并发性：当一个SQLiteSession（对应一个线程）在 读写 数据库时，不允许其他SQLiteSession 读写 数据库

事务的正确使用方式：
将一组修改的statement放入到一个事务中，
好处：
	性能提升：多次修改 只用操作1次数据库文件（在提交事务之前，修改都在内存中）
	原子性：一组操作同时成功，或同时失败
编码：
	SQLiteDatabase#beginTransactionNonExclusive 或者 SQLiteDatabase#beginTransaction
	try{
		//执行 增删改
		...
		SQLiteDatabase#setTransactionSuccessful
	}finally{
		SQLiteDatabase#endTransaction
	}
		